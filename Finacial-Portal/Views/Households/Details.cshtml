@using Finacial_Portal.Helpers
@using Finacial_Portal.Models
@using Microsoft.AspNet.Identity
@model Household

@{
    ViewBag.Title = "Details";

    var userId = User.Identity.GetUserId();
}

<style>
    .member {
        padding-top: 15px;
        padding-bottom: 15px;
    }
</style>

<div class="row">
    <div class="btn-group-sm">
        <a href="#accounts" class="btn btn-sm btn-default waves-effect">Your Accounts</a>
        <a href="#budgets" class="btn btn-sm btn-default waves-effect">Your Budgets</a>
        <a href="#transactions" class="btn btn-sm btn-default waves-effect">Your Transactions</a>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <h2>@Html.DisplayFor(model => model.Name)</h2>
    </div>
    @if (User.IsInRole("Head of Household"))
    {
        <div class="col-md-6 align-right">
            <div class="btn-group-lg">
                <a href=@Url.Action("Invite", "Households", new { id = Model.Id }) class="btn btn-lg btn-info waves-effect">Invite Members</a>
                <a href=@Url.Action("Create", "Accounts", new { id = Model.Id }) class="btn btn-lg btn-info waves-effect">Add a bank account</a>
                <a href=@Url.Action("Create", "Budgets", new { id = Model.Id }) class="btn btn-lg btn-info waves-effect">Create a budget</a>
                <a href=@Url.Action("Create", "Transactions") class="btn btn-lg btn-info waves-effect">Add a transaction</a>
            </div>
        </div>
    }
    else
    {
        <div class="col-md-6 align-right">
            <div class="btn-group-lg">
                <a href=@Url.Action("Create", "Transactions") class="btn btn-lg btn-info waves-effect">Add a transaction</a>
            </div>
        </div>
    }

</div>

<div class="card">
    <div class="header">
        <h3>Members</h3>
        @if(User.IsInRole("Head of Household"))
        {
            <ul class="header-dropdown m-r--5">
                <li class="dropdown">
                    <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                        <i class="material-icons">more_vert</i>
                    </a>
                    <ul class="dropdown-menu pull-right">
                        <li>@Html.ActionLink("Invite new users", "Invite", "Households", new { id = Model.Id })</li>
                    </ul>
                </li>
            </ul>
        }
    </div>
    <div class="body">
        <div class="row">
            @foreach (var member in Model.Users.OrderBy(u => u.FirstName))
            {
                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="info-box bg-blue hover-expand-effect">
                        <div class="icon">
                            <img class="member" src="@UserHelper.GetAvatarPath(member.Id)" width="50" height="80" alt="User" />
                        </div>

                        <div class="content">
                            <div class="text">@member.FirstName @member.LastName</div>
                            <div class="number">
                                @foreach (var role in UserHelper.ListUserRoles(member.Id))
                                {
                                    @role
                                }
                            </div>
                        </div>
                    </div>

                </div>
            }

        </div>
    </div>
    <div id="accounts"></div>
</div>

<br />

<div class="card">
    <div class="header">
        <h3>Bank Accounts</h3>
        @if(User.IsInRole("Head of Household"))
        {
            <ul class="header-dropdown m-r--5">
                <li class="dropdown">
                    <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                        <i class="material-icons">more_vert</i>
                    </a>
                    <ul class="dropdown-menu pull-right">
                        <li>@Html.ActionLink("Add new account", "Create", "Accounts", new { id = Model.Id })</li>
                    </ul>
                </li>
            </ul>
        }
    </div>
    <div class="body">
        <div class="row">
            @foreach (var account in Model.Accounts)
            {

                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="info-box bg-purple hover-zoom-effect">
                        <div class="icon">
                            <i class="material-icons">attach_money</i>
                        </div>

                        <div class="content">
                            <div class="text">
                                <a class="text font-underline" href=@Url.Action("Details", "Accounts", new { id = account.Id })>@account.Name</a>
                            </div>

                            <div class="number count-to" data-from="0" data-to="@account.Balance" data-speed="1200" data-fresh-interval="20">
                                @account.Balance

                            </div>
                        </div>
                    </div>

                </div>
            }

        </div>
    </div>
    <div id="budgets"></div>
</div>

<br />

<div class="card">
    <div class="header">
        <h3>Budgets</h3>
        @if (User.IsInRole("Head of Household"))
        {
            <ul class="header-dropdown m-r--5">
                <li class="dropdown">
                    <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                        <i class="material-icons">more_vert</i>
                    </a>
                    <ul class="dropdown-menu pull-right">
                        <li>@Html.ActionLink("Add new budget", "Create", "Budgets", new { id = Model.Id }, null)</li>
                    </ul>
                </li>
            </ul>
        }
    </div>
    <div class="body">
        <div class="row">
            @foreach (var budget in Model.Budgets)
            {
                <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="info-box bg-green hover-zoom-effect">
                        <div class="icon">
                            <i class="material-icons">attach_money</i>
                        </div>

                        <div class="content">
                            <div class="text">
                                <a class="text font-underline" href=@Url.Action("Details", "Budgets", new { id = budget.Id })>@budget.Name</a>
                            </div>
                            <div class="number">
                                Target: $@budget.Target
                            </div>
                        </div>
                    </div>

                </div>
            }

        </div>
    </div>
    <div id="transactions"></div>
</div>

<br />

<div class="card">
    <div class="header">
        <h3>Transactions</h3>
        <ul class="header-dropdown m-r--5">
            <li class="dropdown">
                <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    <i class="material-icons">more_vert</i>
                </a>
                <ul class="dropdown-menu pull-right">
                    <li>@Html.ActionLink("Add transaction", "Create", "Transactions")</li>
                </ul>
            </li>
        </ul>
    </div>
    <div class="body">
       @Html.Partial("_TransactionsTable")
    </div>
</div>

<br />
@if(User.IsInRole("Household Member") || (User.IsInRole("Head of Household") && Model.Users.Count == 1))
{
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-danger">
                <div class="panel-heading">
                    <h3>Leave House</h3>
                </div>
                <div class="panel-body">
                    @{
                        var householdId = Model.Id;
                    }
                    <p>By clicking this button you will leave this household. If you are the only person in this house, it will be deleted</p>
                    <button class="btn btn-danger" onclick="AjaxLeave('@userId', '@householdId')">Leave</button>
                </div>
            </div>
        </div>
    </div>
}


@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

    function AjaxLeave(userId, householdId) {
        $.ajax({
            type: 'GET',
            url: "@Url.Action("AjaxLeave", "Households")",
            data: { userId: userId, houseId: householdId },
            success: function (result) {
                if (result === "Success") {
                    swal({
                        text: "You have left this household",
                        icon: "success",
                        buttons: {
                            cancel: "OK"
                        },
                    })
                        .then((value) => {
                            switch (value) {
                                default:
                                window.location.href = "@Url.Action("Index", "Home")";
                                    //return RedirectToAction("Details", "BlogPosts", new { slug = Slug }, null);
                            }
                        });
                }
                else {
                    swal("Uh-Oh! Something went wrong while trying to leave...", {
                        icon: "error"
                    });
                }
            },
        });
    }
    </script>

    <script>
        function Void(transactionId) {
            $.ajax({
                type: 'GET',
                url: "@Url.Action("Void", "Transactions")",
                data: { id: transactionId },
                success: function (result) {
                    if (result === "Success") {
                        swal({
                            text: "You have Voided this transaction",
                            icon: "success",
                            buttons: {
                                cancel: "OK"
                            },
                        })
                            .then((value) => {
                                switch (value) {
                                    default:
                                    window.location.href = "@Url.Action("Details", "Households", new { id = Model.Id })";
                                }
                            });
                    }
                    else {
                        swal("Uh-Oh! Something went wrong while trying to leave...", {
                            icon: "error"
                        });
                    }
                },
            });
        }
    </script>

    <script>
        $('.table').DataTable();
    </script>

    <script>
        // Select all links with hashes
        $('a[href*="#"]')
            // Remove links that don't actually link to anything
            .not('[href="#"]')
            .not('[href="#0"]')
            .click(function (event) {
                // On-page links
                if (
                    location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '')
                    &&
                    location.hostname == this.hostname
                ) {
                    // Figure out element to scroll to
                    var target = $(this.hash);
                    target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
                    // Does a scroll target exist?
                    if (target.length) {
                        // Only prevent default if animation is actually gonna happen
                        event.preventDefault();
                        $('html, body').animate({
                            scrollTop: target.offset().top
                        }, 1000, function () {
                            // Callback after animation
                            // Must change focus!
                            var $target = $(target);
                            $target.focus();
                            if ($target.is(":focus")) { // Checking if the target was focused
                                return false;
                            } else {
                                $target.attr('tabindex', '-1'); // Adding tabindex for elements not focusable
                                $target.focus(); // Set focus again
                            };
                        });
                    }
                }
            });
    </script>

    <script>
        $(function () {
            if ("@TempData["overdraft"]" == "true") {
                swal({
                    text: "You have Overdrafted your account",
                    icon: "error",
                    buttons: {
                        cancel: "OK"
                    }
                })
            }
        });
        
    </script>
}